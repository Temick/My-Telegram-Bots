'''–ü—Ä–∏–º–µ—Ä—ã –ø—Ä–æ—Å—Ç–µ–π—à–∏—Ö –±–æ—Ç–æ–≤'''

from aiogram import Bot, Dispatcher, executor,types
from aiogram.types import ReplyKeyboardMarkup, ReplyKeyboardRemove, KeyboardButton
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

from config import TOKKENBOTS
import string
import random

bot = Bot(TOKKENBOTS)
dp = Dispatcher(bot)


# –±–æ—Ç —Å callback
'''
async def on_startup(_):
    print('–Ø –∑–∞–ø—É—Å—Ç–∏–ª—Å—è')

kb = ReplyKeyboardMarkup(resize_keyboard=True)
b1 = KeyboardButton(text='/help')
b2 = KeyboardButton(text='/vote')
kb.add(b1,b2)


@dp.message_handler(commands=['start'])
async def start_command(message: types.Message):
    await bot.send_message(chat_id=message.chat.id,
                           text='Welcome to our bot!',
                           reply_markup=kb)

@dp.message_handler(commands=['vote'])
async def vote_command(message: types.Message):
    ikb = InlineKeyboardMarkup(row_width=3)
    ib1 = InlineKeyboardButton(text='Yes',
                               callback_data='like')
    ib2 = InlineKeyboardButton(text="No",
                               callback_data='dislike')
    ikb.add(ib1,ib2)
    await bot.send_photo(chat_id=message.chat.id,
                         photo="https://krasivosti.pro/uploads/posts/2022-06/1655423871_61-krasivosti-pro-p-milie-malenkie-koshki-krasivo-foto-65.jpg",
                         caption='–¢–µ–±–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –¥–∞–Ω–Ω–æ–µ —Ñ–æ—Ç–æ?',
                         reply_markup=ikb)

@dp.callback_query_handler()
async def vote_callback(callback: types.CallbackQuery):
    if callback.data == 'like':
        return await callback.answer(text='–£—Ä–∞ —Ç–µ–±–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å!')
    await callback.answer(text='–ñ–∞–ª—å((((')

if __name__ == '__main__':
    executor.start_polling(dp, on_startup=on_startup, skip_updates=True)'''


# –±–æ—Ç —Å –ò–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
'''
async def on_startup(_):
    print('–Ø –∑–∞–ø—É—Å—Ç–∏–ª—Å—è')

kb = ReplyKeyboardMarkup(resize_keyboard=True)
b1 = KeyboardButton('/link')
kb.add(b1)

ikb = InlineKeyboardMarkup(row_width=2)
ib1 = InlineKeyboardButton(text='Button 1',
                           url='https://www.youtube.com/watch?v=5_EHfHbzUCo&list=PLe-iIMbo5JOJm6DRTjhleHojroS-Bbocr&index=11')
ib2 = InlineKeyboardButton(text='Button 2',
                           url='https://www.youtube.com/watch?v=AmT7P8b_cb8')
ikb.add(ib1,ib2)

@dp.message_handler(commands=['link'])
async def start_comand(message: types.Message):
    await bot.send_message(chat_id=message.from_user.id,
                           text='–°–ª—É—á–∞–π–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ —é—Ç—é–±',
                           reply_markup=ikb)

@dp.message_handler(commands=['start'])
async def start_comand(message: types.Message):
    await bot.send_message(chat_id=message.from_user.id,
                           text='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å',
                           reply_markup=kb)

if __name__ == '__main__':
    executor.start_polling(dp, on_startup=on_startup, skip_updates=True)'''

# –±–æ—Ç —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π

'''
async def on_startup(_):
    print('–Ø –∑–∞–ø—É—Å—Ç–∏–ª—Å—è')

kb = ReplyKeyboardMarkup(resize_keyboard=True)
b1 = KeyboardButton('/help')
b2 = KeyboardButton('/description')
b3 = KeyboardButton('/photo')
b4 = KeyboardButton('‚ù§Ô∏è')
b5 = KeyboardButton('–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–ø–µ–ª—å—Å–∏–Ω')
b6 = KeyboardButton('/location')
kb.add(b1).insert(b2).add(b3).insert(b4).add(b5).insert(b6)

HELPCOMMAND = 
<b>/help</b> - <em>—Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥</em>
<b>/start</b> - <em>—Å—Ç–∞—Ä—Ç –±–æ—Ç–∞</em>
<b>/description</b> - <em>–æ–ø–∏—Å–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞</em>
<b>/photo</b> - <em>–æ—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞—à–µ–≥–æ —Ñ–æ—Ç–æ</em>

@dp.message_handler(commands=['help'])
async def help_comand(message: types.Message):
    await bot.send_message(chat_id=message.from_user.id, 
                           text=HELPCOMMAND, 
                           parse_mode='HTML')
    await message.delete()

@dp.message_handler(commands=['start'])
async def start_comand(message: types.Message):
    await bot.send_message(chat_id=message.chat.id, 
                           text='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –±–æ—Ç!', 
                           parse_mode='HTML',
                           reply_markup=kb)
    await message.delete()

@dp.message_handler(commands=['description'])
async def description_comand(message: types.Message):
    await bot.send_message(chat_id=message.chat.id, 
                           text='–ù–∞—à –±–æ—Ç —É–º–µ–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ñ–æ—Ç–æ', parse_mode='HTML')
    await message.delete()

@dp.message_handler(commands=['photo'])
async def send_img(message: types.Message):
    await bot.send_photo(chat_id=message.chat.id, 
                         photo="https://ae01.alicdn.com/kf/Hfef8b2bf5cb442cfb853b6ed6c75627bv.jpg")
    await message.delete()

@dp.message_handler(commands=['location'])
async def send_point(message: types.Message):
    await bot.send_location(chat_id=message.chat.id, 
                            latitude=70,
                            longitude=70)
    await message.delete()

@dp.message_handler()
async def send_kotik(message: types.Message):
    if message.text == '‚ù§Ô∏è':
        await bot.send_sticker(chat_id=message.chat.id, 
                               sticker="CAACAgQAAxkBAAEJH5lkceVqRL87jDapibmiiNQ_bLVmDAACAQwAAuCHgVFGMXh8c_-m9C8E")
    if message.text == '–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–ø–µ–ª—å—Å–∏–Ω':
        await bot.send_photo(chat_id=message.chat.id, 
                             photo="https://klike.net/uploads/posts/2022-12/1670819981_1.jpg")
    await message.delete()

if __name__ == '__main__':
    executor.start_polling(dp, on_startup=on_startup, skip_updates=True)'''

# –±–æ—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ –∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
'''
async def on_startup(_):
    print('–Ø –∑–∞–ø—É—Å—Ç–∏–ª—Å—è')

HELPCOMMAND = 
<b>/start</b> - <em>–Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞</em>
<b>/help</b> - <em>—Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥</em>
<b>/–∫–∞—Ä—Ç–∏–Ω–∫–∞</b> - <em>–æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–æ—Ç–æ —Å –∫–æ—Ç–æ–º</em>
<b>/location</b> - <em>–æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ª–æ–∫–∞—Ü–∏—é –ø–æ –∫–æ–∞—Ä–¥–∏–Ω–∞—Ç–∞–º</em>


@dp.message_handler(commands=['help'])
async def help_comand(message: types.Message):
    await bot.send_message(chat_id=message.from_user.id, text=HELPCOMMAND, parse_mode='HTML')

@dp.message_handler(commands=['–∫–∞—Ä—Ç–∏–Ω–∫–∞'])
async def send_img(message: types.Message):
    await bot.send_photo(chat_id=message.chat.id, photo="https://ae01.alicdn.com/kf/Hfef8b2bf5cb442cfb853b6ed6c75627bv.jpg")

@dp.message_handler(commands=['location'])
async def send_point(message: types.Message):
    await bot.send_location(chat_id=message.from_user.id, latitude=55, longitude=74)

if __name__ == '__main__':
    executor.start_polling(dp, on_startup=on_startup, skip_updates=True)'''

# –±–æ—Ç - —ç–º–æ–¥–∑–∏ –∏ –∏—Ö ID
'''
async def on_startup(_):
    print('–Ø –∑–∞–ø—É—Å—Ç–∏–ª—Å—è')

HELP_COMMAND =
<b>/help</b> - <em>—Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥</em>
<b>/start</b> - <em>–Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞</em>
<b>/give</b> - <em>—Å—Ç–∏–∫–µ—Ä —Å –∫–æ—Ç–æ–º</em>

@dp.message_handler(commands=['start'])
async def start_command(message: types.Message):
    await message.answer(text='<em>–ü—Ä–∏–≤–µ—Ç, <b>–¥–æ–±—Ä–æ</b> –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –±–æ—Ç</em>', parse_mode="HTML")

@dp.message_handler(commands=['help'])
async def help_command(message: types.Message):
    await message.answer(text=HELP_COMMAND, parse_mode="HTML")


@dp.message_handler(commands=['give'])
async def give_command(message: types.Message):
    await message.answer('–°–º–æ—Ç—Ä–∏ –∫–∞–∫–æ–π –∫–æ—Ç–∏–∫!‚ù§Ô∏è')
    await bot.send_sticker(message.from_user.id, sticker="CAACAgQAAxkBAAEJHjlkcQF_g0Skfo6DI_AFrXGu6iVEQQACxAcAAnCkiFF_smQ4-5ElIC8E")

@dp.message_handler()
async def send_emoji(message: types.Message):
    if message.text == '‚ù§Ô∏è':
        return await message.answer('üñ§')
    await message.answer(f"{message.text + '‚ù§Ô∏è'}\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–∞–ª–æ—á–µ–∫: {message.text.count('‚úÖ')}")

@dp.message_handler(content_types=['sticker'])
async def send_stickers_id(message: types.Message):
    await message.answer(message.sticker.file_id)

if __name__ == '__main__':
    executor.start_polling(dp, on_startup=on_startup)'''

# –±–æ—Ç —Å —Ä–∞–Ω–¥–æ–º–Ω—ã–º —Å–∏–º–≤–æ–ª–æ–º –∞–ª—Ñ–∞–≤–∏—Ç–∞

'''

COUNT = 0
HELP =
/start - –Ω–∞—á–∏–Ω–∞–µ–º —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
/help - —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥
/description - –æ–ø–∏—Å–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞
/count - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö –≤—ã–∑–æ–≤–æ–≤

@dp.message_handler(commands=['help'])
async def help_command(message: types.Message):
    await message.reply(text=HELP)

@dp.message_handler(commands=['start'])
async def start_command(message: types.Message):
    await message.answer(text="–ü—Ä–∏–≤–µ—Ç, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
    await message.delete()

@dp.message_handler(commands=['description'])
async def description_command(message: types.Message):
    await message.reply(text='–î–∞–Ω–Ω—ã–π –±–æ—Ç –≤ –æ—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤–∞–º —Å–ª—É—á–∞–π–Ω—ã–π —Å–∏–º–≤–æ–ª –∞–ª—Ñ–∞–≤–∏—Ç–∞, –∞ —Ç–∞–∫–∂–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç YES, –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —á–∏—Å–ª–æ 0 –∏ NO –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ')

@dp.message_handler(commands=['count'])
async def count_command(message: types.Message):
    global COUNT
    COUNT += 1
    await message.reply(text=COUNT)

@dp.message_handler()
async def random_symbol(message: types.Message):
    if '0' in message.text:
        await message.answer(text=f'{random.choice(string.ascii_letters)} YES')
    else:
        await message.answer(text=f'{random.choice(string.ascii_letters)} NO')

if __name__ == '__main__':
    executor.start_polling(dp)'''